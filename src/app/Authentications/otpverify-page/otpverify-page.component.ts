import { Component,OnInit } from '@angular/core';
import firebase from 'firebase/compat/app';
import 'firebase/auth'
import 'firebase/firestore'
import {Router} from '@angular/router';
import { JwtserviceService } from 'src/app/services/jwtservice.service';
import { Subscription } from 'rxjs';
import { UserApiCallsService } from 'src/app/services/user-api-calls.service';
import { HttpClient } from '@angular/common/http';

@Component({
  selector: 'app-otpverify-page',
  templateUrl: './otpverify-page.component.html',
  styleUrls: ['./otpverify-page.component.css']
})

export class OtpverifyPageComponent implements OnInit {

  //Properties
  TokenData : any; 
   otp!:string;
   tokenSubscription?: Subscription;
   verify :any;
   config = {
     allowNumbersOnly: true,
     length: 6,
     isPasswordInput: false,
     disableAutoFocus: false,
     placeholder: '',
     inputStyles: {
       width: '40px',
       height: '40px',
     },
   };
   

  //Constructor
  constructor(private router :Router, private jwtService: JwtserviceService, private http: HttpClient,private userApi: UserApiCallsService){
  }

  addUserAPICall(formData: FormData) {
    return this.http.post('https://exceedinternal.azurewebsites.net/api/User/AddUser', formData);
  }
  //ngoninit function
  ngOnInit(){
    this.tokenSubscription = this.jwtService.getDecodedToken().subscribe(
      (tokenData) => {
        console.log(tokenData);
        this.TokenData= tokenData
      },
      (error) => {
        console.error('Error fetching token:', error);
      }
    );

    this.verify=JSON.parse(localStorage.getItem('verificationId') || '{}');
    console.log(this.verify);
  }

  //Function to verify OTP from input
  onOtpEntry(otpcode:any){
    this.otp=otpcode;
  }

  //Function HandleClick
  handleClick() {
    var credentials = firebase.auth.PhoneAuthProvider.credential(this.verify, this.otp);
    firebase.auth().signInWithCredential(credentials).then((response) => {
      console.log(response);
      // Sending jwt token generated by firebase to the backend
      response.user?.getIdToken().then((accessToken) => {
        console.log('Access Token:', accessToken);
        // Storing token to local storage so that it can be accessed later
        localStorage.setItem('accessToken', accessToken);
      });

       // Store the phone number in Firestore
       const phoneNumber = response.user?.phoneNumber;
       const phoneNumbersCollection = firebase.firestore().collection('users');
       phoneNumbersCollection.add({
         phoneNumber: phoneNumber
       })
         .then(() => {
           console.log('Phone number stored in Firestore');
         })
         .catch((error) => {
           console.error('Error storing phone number in Firestore:', error);
         });
  
      // Checking if the user already exists or is signing up for the first time
      if (response.additionalUserInfo?.isNewUser == true) {
        const formData = new FormData();
        formData.append("userID", this.TokenData.user_id);
        formData.append("phoneNumber", this.TokenData.phone_number);
        console.log('Form Data:', formData);
  
        // Call the addUserAPICall method here
        this.userApi.addUserAPICall(formData).subscribe((apiResponse) => {
          console.log("New user created...", apiResponse);
          
          // After making the API call, navigate to the desired page
          this.router.navigate(['/myprofilepage']);
        }, (error) => {
          console.error('Error adding user:', error);
        });
      } else if (response.additionalUserInfo?.isNewUser == false) {
        this.router.navigate(['/dashboardpage']);
      }
    }).catch((error) => {
      alert(error);
    });
  }}