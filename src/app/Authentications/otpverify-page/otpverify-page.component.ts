import { Component,OnInit,ElementRef } from '@angular/core';
import firebase from 'firebase/compat/app';
import 'firebase/auth'
import 'firebase/firestore'
import {Router} from '@angular/router';


import { HttpClient } from '@angular/common/http';

import { Subscription } from 'rxjs';
import { JwtserviceService } from 'src/app/services/jwtservice.service';
import { UserApiCallsService } from 'src/app/services/user-api-calls.service';


@Component({
  selector: 'app-otpverify-page',
  templateUrl: './otpverify-page.component.html',
  styleUrls: ['./otpverify-page.component.css']
})

export class OtpverifyPageComponent implements OnInit {

  //Properties

  previewImageUrl: string = 'https://exceedinternal.azurewebsites.net//images/461fafff-aa19-4842-af9d-31133283abb7.jpg'; // Default preview image
   otp!:string;
   formdata: FormData= new FormData();

   verify :any;
   tokenSubscription?: Subscription;
   config = {
     allowNumbersOnly: true,
     length: 6,
     isPasswordInput: false,
     disableAutoFocus: false,
     placeholder: '',
     inputStyles: {
       width: '40px',
       height: '40px',
     },
   };
   

  //Constructor

  constructor(private el: ElementRef,private apiCall:UserApiCallsService,private router :Router,private jwtService: JwtserviceService){

  }

  //ngoninit function
  ngOnInit(){
    this.tokenSubscription = this.jwtService.getDecodedToken().subscribe(
      (tokenData) => {
        console.log(tokenData);
      },
      (error) => {
        console.error('Error fetching token:', error);
      }
    );

    this.verify=JSON.parse(localStorage.getItem('verificationId') || '{}');
    console.log(this.verify);
  }

  //Post user api call
  postAPICall(phoneNumber:any){
    const object={
      phoneNo:phoneNumber
    }
    console.log("HELOOOOOOOOOOOOOOOOOOOOOOOO",phoneNumber);
    this.apiCall.postNewUserAPICall(object).subscribe(
      (response) => {
        console.log('New user posted in:', response);
      },
      (error) => {
        console.error('Error updating profile:', error);
      }
    );
  }

  //Preview selected image
  onImageSelected(event: Event) {
    const inputElement = this.el.nativeElement.querySelector(this.previewImageUrl) as HTMLInputElement;
    const selectedFile = inputElement.files?.[0];
    if (selectedFile) {
      const objectUrl = URL.createObjectURL(selectedFile);
      this.previewImageUrl = objectUrl;
    }
  }

  //Function to verify OTP from input
  onOtpEntry(otpcode:any){
    this.otp=otpcode;
  }

 
 
  async handleClick(){
    var credentials = firebase.auth.PhoneAuthProvider.credential(this.verify,this.otp);
    firebase.auth().signInWithCredential(credentials).then(async (response)=>{
      console.log(response);
      //Sending jwt token generated by firebase to backend
      // console.log(response.user?.phoneNumber,response.user?.uid,response.user?.sts);
      response.user?.getIdToken().then(async (accessToken) => {
        localStorage.setItem('accessToken', accessToken);
        console.log('Access Token:', accessToken);
        //Storing token to local storage so that it can be accessed later
        //Sending the data obtained to forma data function
        if(response.additionalUserInfo?.isNewUser==true){
          console.log('hello');
          await this.postAPICall(response.user?.phoneNumber);
          this.router.navigate(['/myprofilepage']);
        }
        else if(response.additionalUserInfo?.isNewUser==false){
            this.router.navigate(['/dashboardpage']);
        }
      }).catch((error)=>{
        alert(error);
      })
      }); 
      //checking if the user already exists or is signing up for the first time
    
  }
}

